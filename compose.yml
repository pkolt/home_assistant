services:
  certbot_once:
    container_name: certbot_once
    build: ./certbot_once
    restart: no
    ports:
      - 80:80
    volumes:
      - ./letsencrypt/:/etc/letsencrypt
    env_file:
      - .env
    networks:
      - private

  home_assistant:
    container_name: home_assistant
    image: "homeassistant/home-assistant"
    restart: always
    depends_on:
      - mosquitto
    volumes:
      - ./home_assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    ports:
      - 8080:8080
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true
    networks:
      - private

  nginx:
    container_name: nginx
    image: "nginx"
    restart: always
    depends_on:
      - home_assistant
      - certbot_once
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./letsencrypt/:/etc/nginx/ssl:ro
    networks:
      - private
    ports:
    - 443:443
    env_file:
      - .env

  certbot_renew:
    container_name: certbot_renew
    build: ./certbot_renew
    restart: always
    depends_on:
      - nginx
    ports:
      - 80:80
    volumes:
      - ./letsencrypt/:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    networks:
      - private

  mosquitto:
    container_name: mosquitto
    build: ./mosquitto
    restart: always
    ports:
      - 1883:1883
    volumes:
      - ./mosquitto/config/:/etc/mosquitto/conf.d/
      - ./mosquitto/log/:/var/log/mosquitto/
      - ./mosquitto/secret/:/etc/mosquitto/secret/
    env_file:
      - .env
    networks:
      - private

# volumes:
# - /var/run/docker.sock:/var/run/docker.sock  # Доступ к Docker API
# docker exec target some-command

# Это позволяет контейнерам взаимодействовать друг с другом по именам сервисов (нужно указать сеть private у каждого контейнера)
networks:
  private:
    driver: bridge
