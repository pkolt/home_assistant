services:
  certbot_once:
    container_name: certbot_once
    build: ./certbot_once
    restart: no
    ports:
      - 80:80
    volumes:
      - ./letsencrypt/:/etc/letsencrypt
    env_file:
      - .env
    networks:
      - private

  home_assistant:
    container_name: home_assistant
    image: "homeassistant/home-assistant"
    restart: always
    depends_on:
      - mosquitto
      - whisper
      - piper
      - zigbee2mqtt
    volumes:
      - ./home_assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    ports:
      - 8080:8080
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    privileged: true
    networks:
      - private

  nginx:
    container_name: nginx
    image: "nginx"
    restart: always
    depends_on:
      - home_assistant
      - certbot_once
    volumes:
      - ./nginx/templates:/etc/nginx/templates:ro
      - ./letsencrypt/:/etc/nginx/ssl:ro
    networks:
      - private
    ports:
    - 443:443
    env_file:
      - .env

  certbot_renew:
    container_name: certbot_renew
    build: ./certbot_renew
    restart: always
    depends_on:
      - nginx
    ports:
      - 80:80
    volumes:
      - ./letsencrypt/:/etc/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    networks:
      - private

  mosquitto:
    container_name: mosquitto
    build: ./mosquitto
    restart: always
    ports:
      - 1883:1883
    volumes:
      - ./mosquitto/config/:/etc/mosquitto/conf.d/
      - ./mosquitto/secret/:/etc/mosquitto/secret/
    env_file:
      - .env
    networks:
      - private

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    restart: always
    privileged: true
    ports:
      - 6052:6052 # Веб-интерфейс ESPHome
      - 6053:6053 # для связи ESPHome с Home Assistant
      - 8266:8266 # для OTA-прошивки устройств на ESP8266
      - 3232:3232 # для OTA-прошивки устройств на ESP32
    volumes:
      - ./esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - private
    environment:
      - USERNAME=${ESPHOME_USERNAME}
      - PASSWORD=${ESPHOME_PASSWORD}

  whisper:
    image: lscr.io/linuxserver/faster-whisper:latest
    container_name: whisper
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WHISPER_MODEL=tiny-int8
      - WHISPER_BEAM=1 #optional
      - WHISPER_LANG=ru #optional
    volumes:
      - ./whisper/config:/config
    ports:
      - 10300:10300

  piper:
    image: lscr.io/linuxserver/piper:latest
    container_name: piper
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - PIPER_VOICE=ru_RU-irina-medium
      - PIPER_LENGTH=1.0 #optional
      - PIPER_NOISE=0.667 #optional
      - PIPER_NOISEW=0.333 #optional
      - PIPER_SPEAKER=0 #optional
      - PIPER_PROCS=1 #optional
    volumes:
      - ./piper/config:/config
    ports:
      - 10200:10200

# volumes:
# - /var/run/docker.sock:/var/run/docker.sock  # Доступ к Docker API
# docker exec target some-command

# Это позволяет контейнерам взаимодействовать друг с другом по именам сервисов (нужно указать сеть private у каждого контейнера)
networks:
  private:
    driver: bridge
